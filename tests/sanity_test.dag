
// Test language features and parallel block.
// We're writing "indexy" code.

int[] saxpy(int[] a, int[] b, int[] c){
  int[] indexes = tabulate(0,dim0(a),1);
  return parallel(int i <- indexes){
    return a[i] * b[i] + c[i];
  };
}

// Float equivalent.
float[] saxpy_float(float[] a, float[] b, float[] c){
  int[] indexes = tabulate(0,dim0(a),1);
  return parallel(int i <- indexes){
    return a[i] * b[i] + c[i];
  };
}

// Test language primitives, like zipwith and reduce.
int sum_int(int[] a, int[] b){
  int[] c = zipWith(+,a,b);
  return reduce(+,0,c);
}

// Float equivalent.
float sum_float(float[] a, float[] b){
  float[] c = zipWith(+,a,b);
  return reduce(+,0,c);
}

